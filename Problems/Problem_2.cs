using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Project_Euler_Problem.Problems
{
    class Problem_2
    {
        /* 
        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
        
        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
        */

        int intSumOfEvenNumberedValuesOfFibonacciNumbers;
        int intF1 = 1;
        int intF2 = 1;

        public void switchValues(int intFirst, int intSecond)
        {
            // The second value now becomes the first...
            intF1 = intSecond;

            // ...and the second value now gets the new value.
            intF2 = intFirst + intSecond;
        }

        public int calcuateSumEvenNumbersOfFibonacciNumbers(int intLimit)
        {
            // do the following as long as the sum of the two numbers are less than or equal to the limit
            while (intF1 + intF2 <= intLimit)
            {
                if ((intF1 + intF2) % 2 == 0)
                {
                    // add the sum of the numbers...
                    intSumOfEvenNumberedValuesOfFibonacciNumbers += intF1 + intF2;

                    // then switch the values, higher amount -> intF1,
                    //  sum of two numbers -> intF2
                    switchValues(intF1, intF2);
                }
                else
                {
                    switchValues(intF1, intF2);
                }
            }

            return intSumOfEvenNumberedValuesOfFibonacciNumbers;
        }

        /* 
         * I misinterpreted "even-valued terms" to mean terms x0, x2, x4, x6, etc., not the actual values 0, 2, 8, 16, etc.
         * 
         * So my solution as such is below, which does not follow what other people have generated.
         */
        
        /*
        bool boolIsEvenTerm = false;    // start as false since adding 1st + 2nd yields 3rd term => odd term
        int intSmallerValue = 1;
        int intLargerValue = 2;
        int intSum = 2;

        public void switchValues(bool boolTerm, int intSmaller, int intLarger)
        {
            // switch boolean value
            boolIsEvenTerm = !boolTerm;

            // the smaller value takes what the larger value held
            intSmallerValue = intLarger;

            // the larger value takes what the new sum is
            intLargerValue = intSmaller + intLarger;
        }

        public int calculateEvenValueTermedFibonacciNumbersSum(int intLimit)
        {
            while (intSmallerValue + intLargerValue <= intLimit && intLimit > 4)
            {
                if (boolIsEvenTerm == true)
                {
                    // add the value of the even term to the sum
                    intSum += intSmallerValue + intLargerValue;                  

                    // change the value of the boolIsEvenTerm and smaller & larger values
                    switchValues(boolIsEvenTerm, intSmallerValue, intLargerValue);
                }
                else
                {
                    switchValues(boolIsEvenTerm, intSmallerValue, intLargerValue);
                }
            }

            if (intLimit <= 1)
            {
                intSum = 0;
            }
            
            return intSum;
        }
        */
    }
}
